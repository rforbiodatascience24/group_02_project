---
title: "00_all.qmd"
format:
  html:
    embed-resources: true
editor: visual
---


## All documents so far

### Loading our data sets

---
title: "01_load.qmd"
format:
  html:
    embed-resources: true
editor: visual
---

### Loading data

Here we will make a new data file under the data-folder named; "01\_...\_load.tsv". We will combine the three data sets that we have.

The files should be downloaded with the provided links and be placed in the "\_raw" folder which should be in the "data" folder.

From:

![Kaggle: Vaccine and Manufacturer data](https://www.kaggle.com/datasets/gpreda/covid-world-vaccination-progress?select=country_vaccinations.csv&fbclid=IwZXh0bgNhZW0CMTEAAR3OtW8D_QG9A8kUlkJYTV6N-zb-8QOyffgzf9W7KmfZcp-Hxfhpa-WOCBQ_aem_GT1aKjRx2iNuKZoEzxbADw)

![Kaggle: World population data](https://www.kaggle.com/datasets/iamsouravbanerjee/world-population-dataset?resource=download&fbclid=IwZXh0bgNhZW0CMTEAAR0WGn9X_c-z-QeLqBUAxpCcGuSliZUIPwjUnBGtbc6PodeYMHcXHaF0xvA_aem_P5nqzzQkZwaB25RUK0qi7Q&select=world_population.csv)

These have to be put into "../data/\_raw" in your Rstudio. Now to loading:

```{r}
#| echo: false
library(tidyverse)

# Load data into variable
vaccines <- "../data/_raw/country_vaccinations.csv"
manufacturer <- "../data/_raw/country_vaccinations_by_manufacturer.csv"
world_population <- "../data/_raw/world_population.csv"

# Read CSV 
vaccines_data <- read_csv(vaccines)
manufacturer_data <- read_csv(manufacturer)
world_population_data <- read_csv(world_population)

# Writing TSV files
## Vaccines data
write_tsv(x = vaccines_data,
          file = str_c("../data/", "01_vaccines_load.tsv"))
## Manufacturer data 
write_tsv(x = manufacturer_data,
          file = str_c("../data/", "01_manufacturer_load.tsv"))
## World population data
write_tsv(x = world_population_data,
          file = str_c("../data/", "01_world_population_load.tsv"))
```



### Cleaning our data sets

---
title: "02_clean_data"
format:
  html:
    embed-resources: true
editor: visual
---

## Clean data 1

Loading libraries:

```{r}
#|echo: false

# Loading libraries 
library(tidyverse)
library(dplyr)
library(readr)
```

We load the data set:

```{r}
#|echo: false

# Importing load data
manufacturer_update <- read_tsv("../data/01_manufacturer_load.tsv")
vaccines_update <- read_tsv("../data/01_vaccines_load.tsv")
world_population_update <- read_tsv("../data/01_world_population_load.tsv")
```

We inspect the structure:

```{r}
# Looking at the data 
glimpse(manufacturer_update)
glimpse(vaccines_update)
glimpse(world_population_update)
```

We start of by cleaning manufacturer data:

```{r}
# Cleaning manufacturer data 
manufacturer_cleaned <- manufacturer_update |>
  distinct() |> #This is to remove any duplicates there might be
  drop_na(location, date, vaccine) |> #removing the missing
  mutate(date = as.Date(date, format = "%Y-%m-%d")) #Here we make sure the dates are in the corret format

```

We do the same with the vaccine data

```{r}
# Cleaning vaccine data 
vaccines_cleaned <- vaccines_update |> 
  distinct() |> 
  mutate(
    date = as.Date(date, format = "%Y-%m-%d"),
    total_vaccinations = if_else(is.na(total_vaccinations), 
                                 NA_real_, 
                                 total_vaccinations),
    daily_vaccinations = if_else(is.na(daily_vaccinations),
                                 NA_real_,
                                 daily_vaccinations),
    vaccines = replace_na(vaccines, "unknown") #Replace rows where the vaccines are missing with unknown, so it doesn't get grouped with the numeric NA
  ) |>
  
  # Has just been added - removes columns and seperates values in single cell
  select(-iso_code, # Removing irrelavent columns
         -source_website,
         -source_name,
         -daily_vaccinations_raw) |> 
  separate_rows(vaccines, # Seperates the observations so there is only 1 value pr cell
                sep = ",")
```

Since the world population data is already tidy, and we only want to left join it to our other data to make a more comprehensive data set, we have decided to remove some irrelevant columns and then proceed.

```{r}
# Cleaning world population data 
world_population_cleaned <- world_population_update |> 
  select(`Country/Territory`, # Selecting the only relevant columns form the data
         `Continent`,
         `2022 Population`,
         `2020 Population`,
         `Growth Rate`)
```

Now we write the files:

```{r}
# Writing 02_cleaned files
## Manufacturer cleaned
write_tsv(x = manufacturer_cleaned,
          file = str_c("../data/", "02_manufacturer_cleaned.tsv"))

## Vaccnies cleaned
write_tsv(x = vaccines_cleaned,
          file = str_c("../data/", "02_vaccines_cleaned.tsv"))

## World population cleaned
write_tsv(x = world_population_cleaned,
          file = str_c("../data/", "02_world_population_cleaned.tsv"))
```



### Augmentation of our data set

---
title: "03_aug_data"
format:
  html:
    embed-resources: true
editor: visual
---

## Data augmentation

The manufacturer data and vaccine data contains a lot of the same information, the main differences are size. Therefore we make the code with that data set for the manufacture and world population.

If we have time will make the same for the vaccine data.

Loading libraries:

```{r}
#| echo: false

# Loading libraries
library(tidyverse)
library(dplyr)
library(readr)
```

Loading the data to be cleaned:

```{r}
#| echo: false
# Loading data
clean_manufacturer <- read_tsv(file = "../data/02_manufacturer_cleaned.tsv")
clean_vaccines <- read_tsv(file = "../data/02_vaccines_cleaned.tsv")
clean_world_population <- read_tsv(file = "../data/02_world_population_cleaned.tsv")
```

We make a simple change to vaccines:

```{r}
# Adding variable to vaccines
aug_vaccine <- clean_vaccines |> 
    mutate( # Flaging if there is missing some information
    missing_total_vaccinations = is.na(total_vaccinations),
    missing_daily_vaccinations = is.na(daily_vaccinations)) |> 
  rename(`Country` = country) # Changing name
```

Now let make a new population estimate for 2021 by using the growth rate and the 2020 population:

```{r}
# Creating new variable 
options(scipen = 999) # Removing scientific notation

aug_world_population <- clean_world_population |> 
  mutate("2021 Population" = round(`2020 Population`*`Growth Rate`,digits = 0)) |> 
  # Rounding the digits 
  select(`Country/Territory`, # Selecting relevant columns
         `Continent`,
         `2022 Population`,
         `2021 Population`, 
         `2020 Population`) |> 
  rename(`Country` = `Country/Territory`) |> 
  pivot_longer(cols = starts_with("20"), # Columns starting with 20 pivot longer
               names_to = "Year", # New variable name "Year"
               values_to = "Population") |> # Variable for value added, named "Population"
  mutate(Year = as.numeric(str_remove(Year, " Population"))) # Remove the word "Population"

```

We make changes to the manufacturer data:

```{r}
# Making a new column for joining
aug_manufacturer <- clean_manufacturer |> # Making sure that year is a column that matches the date
  mutate(Year = as.numeric(format(date, "%Y")))
```

Now we join the data:

```{r}
# Joining data
## Vaccine and world population - This will happen if we have time

## Manufacture and world population
manufacturer_world_pop <- aug_manufacturer |> 
  rename(`Country` = location) |> # Renaming location
  left_join(aug_world_population,
            by = c("Country", "Year")) |> # Joining based on Country and Year
  # Changing order of column
  select(`Country`, `date`, `Year`, `Population`, `vaccine`, `total_vaccinations`) 
```

Further manipulation, first of with manufacturer and world population data:

```{r}
# Finding the total amount of people vaccinated pr country - 2 vaccination pr person
manufacturer_world_pop <- manufacturer_world_pop |>
  mutate(`Vaccinated people pr country` = round(total_vaccinations/2,0))

# Calculating the percentage of the population who has been vaccinated
manufacturer_world_pop <- manufacturer_world_pop |> 
  mutate(`Percentage Vaccinated` =(`Vaccinated people pr country`/`Population`)*100)

```

Writing files:

```{r}
# Writing 03_aug files
## Manufacturer and world population data
write_tsv(x = manufacturer_world_pop,
          file = str_c("../data/", "03_manufacturer_world_population_aug.tsv"))
## Vaccnies and world population data
#write_tsv(x = vaccines_cleaned,
         # file = str_c("../data/", "02_vaccines_cleaned.tsv"))
```



### 

